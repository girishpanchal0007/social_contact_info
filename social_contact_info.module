<?php

/**
 * @file
 * Social Contact Information helps to add social & contact details for website.
 */

/**
 * Implements hook_help().
 */
function social_contact_info_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module.
    case 'admin/help#social_contact_info':
      return '<p>' . t('Social Contact information provides an option to display contact and social information on a block anywhere on your site. For example, Assign any region to the block where you want to add the Social Contact Information block ("Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc.), You can config your Social Contact Information block from <a href="@blocks">here</a>.', array(
        '@blocks' => url('admin/structure/block'),
      )) . '</p>';
  }
}

/**
 * Implements hook_theme().
 */
function social_contact_info_theme($existing, $type, $theme, $path) {
  return array(
    'social_contact_info_contact_social_detail_list' => array(
      'render element' => 'element',
    ),
    'social_contact_info_contact_social_detail' => array(
      'variables' => array(
        'contact_detail' => array(),
        'social_detail' => array(),
      ),
      'template' => 'block-content-social-contact-detail',
      'path' => drupal_get_path('module', 'social_contact_info') . '/templates',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function social_contact_info_block_info() {
  $blocks['information'] = array(
    'info'   => t('Social Contact Info'),
    'cache'  => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function social_contact_info_block_configure($delta = '') {
  // Declare $form array.
  $form = array();
  // Get variables for contact and social details.
  $values = array(
    'contact_detail' => variable_get('social_contact_info_contact_detail', array()),
    'social_detail' => variable_get('social_contact_info_social_detail', array()),
  );
  // Checking that social contact info block is exist or not.
  if ($delta === 'information') {
    // Website contact information.
    $form['contact_detail'] = array(
      '#type' => 'fieldset',
      '#title' => t('Contact Informations'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
      '#description' => t('Contact information shows contact detail of the website. e.g. (Address, Phone, Email, etc..).'),
    );
    // Declare contact variable for multiple variable in array.
    $contact_values = isset($values['contact_detail']) ? $values['contact_detail'] : array();
    // Contact section title.
    $form['contact_detail']['contact_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Contact Title'),
      '#description' => t('This is contact title which helps to show contact title on top of the contact section. (This is optional.)'),
      '#attributes' => array(
        'placeholder' => t('Contact Title'),
      ),
      '#default_value' => isset($contact_values['contact_title']) ? $contact_values['contact_title'] : '',
    );
    // Address section.
    $form['contact_detail']['address'] = array(
      '#type' => 'fieldset',
      '#title' => t('Address'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['contact_detail']['address']['label'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#description' => t('If you will enter label here the label will be shown otherwise default label will show.'),
      '#default_value' => isset($contact_values['address']['label']) ? $contact_values['address']['label'] : '',
    );
    $form['contact_detail']['address']['value'] = array(
      '#type' => 'text_format',
      '#title' => t('Value'),
      '#resizable' => FALSE,
      '#format' => 'full_html',
      '#default_value' => isset($contact_values['address']['value']['value']) ? $contact_values['address']['value']['value'] : '',
    );
    $form['contact_detail']['address']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($contact_values['address']['weight']) ? $contact_values['address']['weight'] : 0,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort contact fields.'),
    );
    // E-mail section.
    $form['contact_detail']['email'] = array(
      '#type' => 'fieldset',
      '#title' => t('E-mail'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['contact_detail']['email']['label'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#description' => t('If you will enter label here the label will be shown otherwise default label will show.'),
      '#default_value' => isset($contact_values['email']['label']) ? $contact_values['email']['label'] : '',
    );
    $form['contact_detail']['email']['value'] = array(
      '#type' => 'textfield',
      '#title' => t('Value'),
      '#description' => t('This is website email field which helps to show website email. (This is required.)'),
      '#default_value' => isset($contact_values['email']['value']) ? $contact_values['email']['value'] : '',
      '#required' => TRUE,
      '#element_validate' => array('social_contact_info_email_validate'),
    );
    $form['contact_detail']['email']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($contact_values['email']['weight']) ? $contact_values['email']['weight'] : 1,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort contact fields.'),
    );
    // Phone section.
    $form['contact_detail']['phone'] = array(
      '#type' => 'fieldset',
      '#title' => t('Phone'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['contact_detail']['phone']['label'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#description' => t('If you will enter label here the label will be shown otherwise default label will show.'),
      '#default_value' => isset($contact_values['phone']['label']) ? $contact_values['phone']['label'] : '',
    );
    $form['contact_detail']['phone']['value'] = array(
      '#type' => 'textfield',
      '#title' => t('Value'),
      '#description' => t('This is website phone number field which helps to show website phone number. (This is optional.)'),
      '#default_value' => isset($contact_values['phone']['value']) ? $contact_values['phone']['value'] : '',
    );
    $form['contact_detail']['phone']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($contact_values['phone']['weight']) ? $contact_values['phone']['weight'] : 2,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort contact fields.'),
    );
    // Mobile section.
    $form['contact_detail']['mobile'] = array(
      '#type' => 'fieldset',
      '#title' => t('Mobile'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['contact_detail']['mobile']['label'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#description' => t('If you will enter label here the label will be shown otherwise default label will show.'),
      '#default_value' => isset($contact_values['mobile']['label']) ? $contact_values['mobile']['label'] : '',
    );
    $form['contact_detail']['mobile']['value'] = array(
      '#type' => 'textfield',
      '#title' => t('Value'),
      '#description' => t('This is website mobile number field which helps to show website mobile number. (This is optional.)'),
      '#default_value' => isset($contact_values['mobile']['value']) ? $contact_values['mobile']['value'] : '',
    );
    $form['contact_detail']['mobile']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($contact_values['mobile']['weight']) ? $contact_values['mobile']['weight'] : 3,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort contact fields.'),
    );
    // Fax section.
    $form['contact_detail']['fax'] = array(
      '#type' => 'fieldset',
      '#title' => t('FAX'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['contact_detail']['fax']['label'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#description' => t('If you will enter label here the label will be shown otherwise default label will show.'),
      '#default_value' => isset($contact_values['fax']['label']) ? $contact_values['fax']['label'] : '',
    );
    $form['contact_detail']['fax']['value'] = array(
      '#type' => 'textfield',
      '#title' => t('Value'),
      '#description' => t('This is website fax number field which helps to show website fax number.'),
      '#default_value' => isset($contact_values['fax']['value']) ? $contact_values['fax']['value'] : '',
    );
    $form['contact_detail']['fax']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($contact_values['fax']['weight']) ? $contact_values['fax']['weight'] : 4,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort contact fields.'),
    );

    // Website Social information.
    $form['social_detail'] = array(
      '#type' => 'fieldset',
      '#title' => t('Social Information'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
      '#description' => t('Social information shows social links of the website. e.g. (Facebook, LinkedIn, Twitter, etc..).'),
    );
    // Declare social variable for multiple variable in array.
    $social_values = isset($values['social_detail']) ? $values['social_detail'] : array();
    // Social section title.
    $form['social_detail']['social_title'] = array(
      '#type' => 'textfield',
      '#title' => t('Social Title'),
      '#description' => t('This is social title which helps to show social title on top of the social section. (This is optional.)'),
      '#attributes' => array(
        'placeholder' => t('Social Title'),
      ),
      '#default_value' => isset($social_values['social_title']) ? $social_values['social_title'] : '',
    );
    // Facebook section.
    $form['social_detail']['facebook'] = array(
      '#type' => 'fieldset',
      '#title' => t('Facebook'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['social_detail']['facebook']['link'] = array(
      '#type' => 'textfield',
      '#title' => t('URL'),
      '#description' => t('Add your Facebook profile link here.'),
      '#attributes' => array(
        'placeholder' => t('https://www.facebook.com/username/'),
      ),
      '#default_value' => isset($social_values['facebook']['link']) ? $social_values['facebook']['link'] : '',
    );
    $form['social_detail']['facebook']['class'] = array(
      '#type' => 'textfield',
      '#title' => t('Link Class'),
      '#description' => t('Here you can add your custom class to the image. (This is optional field).'),
      '#default_value' => isset($social_values['facebook']['class']) ? $social_values['facebook']['class'] : '',
    );
    $form['social_detail']['facebook']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($social_values['facebook']['weight']) ? $social_values['facebook']['weight'] : 0,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort social fields.'),
    );
    // LinkedIn section.
    $form['social_detail']['linkedin'] = array(
      '#type' => 'fieldset',
      '#title' => t('LinkedIn'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['social_detail']['linkedin']['link'] = array(
      '#type' => 'textfield',
      '#title' => t('URL'),
      '#description' => t('Add your LinkedIn profile link here.'),
      '#attributes' => array(
        'placeholder' => t('https://www.linkedin.com/username/'),
      ),
      '#default_value' => isset($social_values['linkedin']['link']) ? $social_values['linkedin']['link'] : '',
    );
    $form['social_detail']['linkedin']['class'] = array(
      '#type' => 'textfield',
      '#title' => t('Link Class'),
      '#description' => t('Here you can add your custom class to the image. (This is optional field).'),
      '#default_value' => isset($social_values['linkedin']['class']) ? $social_values['linkedin']['class'] : '',
    );
    $form['social_detail']['linkedin']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($social_values['linkedin']['weight']) ? $social_values['linkedin']['weight'] : 1,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort social fields.'),
    );
    // Twitter section.
    $form['social_detail']['twitter'] = array(
      '#type' => 'fieldset',
      '#title' => t('Twitter'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['social_detail']['twitter']['link'] = array(
      '#type' => 'textfield',
      '#title' => t('URL'),
      '#description' => t('Add your Twiiter profile link here.'),
      '#attributes' => array(
        'placeholder' => t('https://twitter.com/username/'),
      ),
      '#default_value' => isset($social_values['twitter']['link']) ? $social_values['twitter']['link'] : '',
    );
    $form['social_detail']['twitter']['class'] = array(
      '#type' => 'textfield',
      '#title' => t('Link Class'),
      '#description' => t('Here you can add your custom class to the image. (This is optional field).'),
      '#default_value' => isset($social_values['twitter']['class']) ? $social_values['twitter']['class'] : '',
    );
    $form['social_detail']['twitter']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($social_values['twitter']['weight']) ? $social_values['twitter']['weight'] : 2,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort social fields.'),
    );
    // Youtube section.
    $form['social_detail']['youtube'] = array(
      '#type' => 'fieldset',
      '#title' => t('Youtube'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['social_detail']['youtube']['link'] = array(
      '#type' => 'textfield',
      '#title' => t('URL'),
      '#description' => t('Add your Youtube profile link here.'),
      '#attributes' => array(
        'placeholder' => t('https://www.youtube.com/username/'),
      ),
      '#default_value' => isset($social_values['youtube']['link']) ? $social_values['youtube']['link'] : '',
    );
    $form['social_detail']['youtube']['class'] = array(
      '#type' => 'textfield',
      '#title' => t('Link Class'),
      '#description' => t('Here you can add your custom class to the image. (This is optional field).'),
      '#default_value' => isset($social_values['youtube']['class']) ? $social_values['youtube']['class'] : '',
    );
    $form['social_detail']['youtube']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($social_values['youtube']['weight']) ? $social_values['youtube']['weight'] : 3,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort social fields.'),
    );
    // Google plus section.
    $form['social_detail']['google_plus'] = array(
      '#type' => 'fieldset',
      '#title' => t('Google Plus'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['social_detail']['google_plus']['link'] = array(
      '#type' => 'textfield',
      '#title' => t('URL'),
      '#description' => t('Add your Google Plus profile link here.'),
      '#attributes' => array(
        'placeholder' => t('https://www.plus.google.com/username/'),
      ),
      '#default_value' => isset($social_values['google_plus']['link']) ? $social_values['google_plus']['link'] : '',
    );
    $form['social_detail']['google_plus']['class'] = array(
      '#type' => 'textfield',
      '#title' => t('Link Class'),
      '#description' => t('Here you can add your custom class to the image. (This is optional field).'),
      '#default_value' => isset($social_values['google_plus']['class']) ? $social_values['google_plus']['class'] : '',
    );
    $form['social_detail']['google_plus']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($social_values['google_plus']['weight']) ? $social_values['google_plus']['weight'] : 4,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort social fields.'),
    );
    // Instagram section.
    $form['social_detail']['instagram'] = array(
      '#type' => 'fieldset',
      '#title' => t('Instagram'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#tree' => TRUE,
    );
    $form['social_detail']['instagram']['link'] = array(
      '#type' => 'textfield',
      '#title' => t('URL'),
      '#description' => t('Add your Instagram profile link here.'),
      '#attributes' => array(
        'placeholder' => t('https://www.instagram.com/username/'),
      ),
      '#default_value' => isset($social_values['instagram']['link']) ? $social_values['instagram']['link'] : '',
    );
    $form['social_detail']['instagram']['class'] = array(
      '#type' => 'textfield',
      '#title' => t('Link Class'),
      '#description' => t('Here you can add your custom class to the image. (This is optional field).'),
      '#default_value' => isset($social_values['instagram']['class']) ? $social_values['instagram']['class'] : '',
    );
    $form['social_detail']['instagram']['weight'] = array(
      '#type' => 'weight',
      '#title' => t('Weight'),
      '#default_value' => isset($social_values['instagram']['weight']) ? $social_values['instagram']['weight'] : 5,
      '#delta' => 5,
      '#description' => t('Optional, This helps to sort social fields.'),
    );
  }
  return $form;
}

/**
 * The function calls using "#element_validate" attribute.
 */
function social_contact_info_email_validate($element) {
  if ((!empty($element['#value'])) && (!valid_email_address($element['#value']))) {
    form_set_error('email', t('The email address %mail is not valid.', array('%mail' => $element['#value'])));
  }
}

/**
 * Implements hook_block_save().
 */
function social_contact_info_block_save($delta = '', $edit = array()) {
  // Checking that social contact info block is exist or not.
  if ($delta === 'information') {
    // Contact detail array of fields.
    variable_set('social_contact_info_contact_detail', $edit['contact_detail']);
    // Social detail array of fields.
    variable_set('social_contact_info_social_detail', $edit['social_detail']);
  }
}

/**
 * Implements hook_block_view().
 */
function social_contact_info_block_view($delta = '') {
  $block = array();
  if ($delta === 'information') {
    $block['subject'] = t('Contact Us');
    $block['content'] = array(
      '#theme' => 'social_contact_info_contact_social_detail',
      '#contact_detail' => variable_get('social_contact_info_contact_detail'),
      '#social_detail' => variable_get('social_contact_info_social_detail'),
      '#attributes' => array(
        'class' => array('social-contact-info'),
      ),
    );
    $block['content']['#attached']['css'][] = drupal_get_path('module', 'social_contact_info') . '/css/social_contact_info.css';
  }
  return $block;
}

/**
 * Processes variables for block-content-social-content-detail.tpl.php.
 *
 * Implementation of hook_preprocess_HOOK().
 */
function template_preprocess_social_contact_info_contact_social_detail(&$variables) {
  // The social contact information is not set then show the warning message.
  if (empty($variables['contact_detail']) || empty($variables['social_detail'])) {
    drupal_set_message(t('The social contact info block information not added yet. Please add social contact info information from <a href="@blocks">here</a>.', ['@blocks' => url('admin/structure/block')]), 'warning');
    return;
  }

  // Contact details.
  $contact_details = $variables['contact_detail'];
  if (isset($contact_details["address"]) && !empty($contact_details["address"]["value"]["value"])) {
    $contact_values_slice = array_slice($contact_details, 1);
  }
  else {
    $contact_values_slice = array_slice($contact_details, 2);
  }
  // Get contact fields after sorting.
  $sort_contact_values = social_contact_info_array_sort_by_weight($contact_values_slice, 'weight');
  // Global variable.
  $contact_values = array();
  foreach ($sort_contact_values as $contact_key => $contact_value) {
    // Checking label is set or not.
    if (isset($contact_value['value']) && !empty($contact_value['value'])) {
      // Checking label if labels are blank then array key used as labels.
      if ($contact_value['label'] == '') {
        $contact_value['label'] = ucfirst($contact_key);
      }
      // Added "mailto:" for email field.
      if ($contact_key == 'email') {
        $contact_value['value'] = '<a href="mailto:' . $contact_value['value'] . '" rel="' . $contact_key . '" >' . $contact_value['value'] . '</a>';
      }
      // Added "tel:" for phone & mobile field.
      if ($contact_key == 'phone' || $contact_key == 'mobile') {
        $contact_value['value'] = '<a href="tel:' . $contact_value['value'] . '" rel="' . $contact_key . '" >' . $contact_value['value'] . '</a>';
      }
      // Assigned changes label and values to new object variables.
      $contact_values[] = $contact_value;
    }
  }

  // Social medias.
  $social_details = $variables['social_detail'];
  $social_values_slice = array_slice($social_details, 1);
  // Get social fields after sorting.
  $sort_social_values = social_contact_info_array_sort_by_weight($social_values_slice, 'weight');
  // Global variable.
  $social_values = array();
  foreach ($sort_social_values as $social_key => $social_value) {
    // Checking label is set or not.
    if (isset($social_value['link']) && !empty($social_value['link'])) {
      // Checking label if labels are blank then array key used as labels.
      $social_value['label'] = ucfirst(str_replace('_', ' ', $social_key));
      // Assigned changes label and link to new object variables.
      $social_values[] = $social_value;
    }
  }
  // Contact details.
  $variables['contact_title'] = $contact_details['contact_title'];
  $variables['contact_info'] = $contact_values;
  // Social details.
  $variables['social_title'] = $social_details['social_title'];
  $variables['social_info'] = $social_values;
}

/**
 * Implementation of sorting social and contact fields.
 */
function social_contact_info_array_sort_by_weight($array_values, $sub_key) {
  foreach ($array_values as $key => $array_value) {
    $sort_array_values[$key] = strtolower($array_value[$sub_key]);
  }
  // Array sorting.
  asort($sort_array_values);

  foreach ($sort_array_values as $old_key => $values) {
    $sorting_value[$old_key] = $array_values[$old_key];
  }
  return $sorting_value;
}
